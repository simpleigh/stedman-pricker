/**
 * Free Touch Pricker
 * @author Leigh Simpson <code@simpleigh.com>
 * @license GPL-3.0
 * @copyright Copyright 2015-20 Leigh Simpson. All rights reserved.
 */

/**
 * Renders a touch as HTML for use within a <select> element
 * @param {BlockDirectory}  falseness       directory to lookup falseness
 * @param {number}          selectedIndex   index of selected course
 * @param {number}          touchRows       count of rows in the touch
 */

{{
	context.touchRows = context.touchRows || Infinity;
	context.touchRows -= context.object.start.estimateRows();
}}

<div>
	{{= context.stringFromRow(context.object.start.getLast()) }}
</div>

{{~ context.object.blocks :course }}
	{{
		var classes = [ ];
		if (context.selectedIndex === course.index) {
			classes.push('selected');
		}
		if (context.falseness && context.falseness.contains(course)) {
			classes.push('false');
		}
		if (context.touchRows <= 0) {
			classes.push('unreached');
		}
	}}
	<div
		 class="{{= classes.join(' ') }}"
		 onmousedown="pricker.onSelectCourse({{= course.index }}); return false"
		 ontouchstart="pricker.onSelectCourse({{= course.index }}); return false"
	>
		{{= course.print('text') }}
	</div>
	{{ context.touchRows -= course.estimateRows(); }}
{{~}}
