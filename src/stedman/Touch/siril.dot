/**
 * Free Touch Pricker
 * @author Leigh Simpson <code@simpleigh.com>
 * @license GPL-3.0
 * @copyright Copyright 2015-18 Leigh Simpson. All rights reserved.
 */

/**
 * Renders a touch for consumption by siril-based provers
 * @param {number}  touchRows  rows in the touch
 */

{{
	var courseNames = [ ],
		rounds = context.stringFromRow(
			context.rowFromString('', context.object.getInitialRow().length)
		);

	context.touchRows = context.touchRows || Infinity;
	context.touchRows -= context.object.getStart().estimateRows();
}}

/* Header */
// Generated by Free Touch Pricker{{= '\n' }}
// https://github.com/simpleigh/touch-pricker{{= '\n' }}
{{= '\n' }}

/* Output touch as comments */
// {{= context.stringFromRow(context.object.getInitialRow()) }}{{= '\n' }}
{{~ context.object.getCourses() :course }}
	// {{= course.print('text') }}{{= '\n' }}
{{~}}
{{= '\n' }}

/* Number of bells */
{{= context.object.getInitialRow().length }} bells{{= '\n' }}
{{= '\n' }}

/* MicroSIRIL will prove the first symbol in the file, so define it */
composition = touch{{= '\n' }}
{{= '\n' }}

/* Short blocks */
slow = +3.1.3.1.3{{= '\n' }}
quick = +1.3.1.3.1{{= '\n' }}
plain = +{{= rounds.slice(-1) }}{{= '\n' }}
bob = +{{= rounds.slice(-3, -2) }}{{= '\n' }}
single = +{{= rounds.slice(-3) }}{{= '\n' }}
/* Can't use the name "start": it's processed separately by gsiril */
strt = {{= context.object.getStart().print('siril') }}{{= '\n' }}
{{= '\n' }}

/* Course definitions */
{{~ context.object.getCourses() :course:index }}
	course{{= index + 1 }} =
	 /* single space */
	{{= course.print('siril', {'touchRows': context.touchRows}) }}
	{{ courseNames.push('course' + (index + 1)); }}

	{{ context.touchRows -= course.estimateRows(); }}
	{{? context.touchRows <= 0 }}
		{{ break; }}
	{{?}}
{{~}}
{{= '\n' }}

/* Touch - all the courses */
touch = strt, {{= courseNames.join(', ') }}{{= '\n' }}
{{= '\n' }}

/* Define the touch to prove for GSiril */
prove touch{{= '\n' }}
